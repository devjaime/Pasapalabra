@model IEnumerable<Pasapalabra.Models.Question>

@{
    ViewBag.Title = "Pasapalabra";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Letters -->
<div id="letters" class="lettersDiv text-center">
    <span id="A">A</span>
    <span id="B">B</span>
    <span id="C">C</span>
    <span id="D">D</span>
    <span id="E">E</span>
    <span id="F">F</span>
    <span id="G">G</span>
    <span id="H">H</span>
    <span id="I">I</span>
    <span id="J">J</span>
    <span id="K">K</span>
    <span id="L">L</span>
    <span id="M">M</span>
    <span id="N">N</span>
    <span id="O">O</span>
    <span id="P">P</span>
    <span id="Q">Q</span>
    <span id="R">R</span>
    <span id="S">S</span>
    <span id="T">T</span>
    <span id="U">U</span>
    <span id="V">V</span>
    <span id="W">W</span>
    <span id="X">X</span>
    <span id="Y">Y</span>
    <span id="Z">Z</span>
</div>

<!-- Start Game Button -->
<div class="row startGameBtnDiv">
    <div class="text-center">
        <button id="startGameBtn" class="btn btn-primary btn-lg center-block startGameBtn">Play</button>
    </div>
</div>

<!-- While game is running -->
<div id="game" class="hidden gameRunning">

    <!-- Question's description and input field -->
    <div class="row">
        <div class="col-lg-12 text-center">
            <h2 id="letter">Loading...</h2>
            <h3 id="description">Loading...</h3>
            <input id="inputWord" class="inputWord form-control" type="text" name="inputWord" autocomplete="off" placeholder="Guess the word" />
            <button id="sendAnswerBtn" class="btn btn-primary btn-lg sendAnswerBtn">OK</button>
            <button id="pasapalabraBtn" class="btn btn-secondary btn-lg pasapalabraBtn">Pasapalabra</button>
        </div>
    </div>
</div>

<!-- Results -->
<div id="finalGameScore" class="hidden finalGameScore">
    <div class="row">
        <div class="col-lg-12 text-center">
            <h2>You guessed correctly:</h2>
            <h3><span id="score">0</span> out of 26 questions</h3>
            <button id="playAgainBtn" class="btn btn-primary btn-lg playAgainBtn">Play again</button>
        </div>
    </div>
</div>

@section scripts
{
    <script>

        $(document).ready(function () {

            // Variables
            var startPage = true;
            var gameOn = false;
            var score = 0;
            var letterPosition = -1;

            // Constants
            questions = getQuestions();
            const questionsLength = questions.length;
            const asciiOfA = 65;

            // Get questions
            function getQuestions() {
                var questions = [
                    new question("A", "In the Disney film, what is the name of Aladdin's monkey partner?", "Abu"),
                    new question("B", "Where in the Americas will you hear the Portuguese language?", "Brazil"),
                    new question("C", "Native to South America, what is the largest rodent in the world?", "Capybara"),
                    new question("D", "The Latin word for dragon, what is the first name of Hogwarts student Malfoy?", "Draco"),
                    new question("E", "What TV series stars Jonny Lee Miller as Sherlock Holmes?", "Elementary"),
                    new question("F", "Due to their food intake, which wading bird is famous for its pink plumage?", "Flamingo"),
                    new question("G", "What is Scotland's largest city?", "Glasgow"),
                    new question("H", "On Twitter, what name is given to the '#' symbol?", "Hashtag"),
                    new question("I", "What surname is shared by father and son singers Julio and Enrique?", "Iglesias"),
                    new question("J", "What name is given to a young kangaroo?", "Joey"),
                    new question("K", "Which animal feeds predominantly on eucalyptus leaves?", "Koala"),
                    new question("L", "What U.S. TV show followed the survivors of the Oceanic Flight 815 plane crash?", "Lost"),
                    new question("M", "What is the name of the young boy raised by wolves in Kipling's 'The Jungle Book'?", "Mowgli"),
                    new question("N", "What word describes an animal that is active during the night?", "Nocturnal"),
                    new question("O", "Who was the supreme god and creator in Norse mythology?", "Odin"),
                    new question("P", "Which electric-type Pokémon is Ash's companion in the original anime series?", "Pikachu"),
                    new question("Q", "What is the capital of Ecuador?", "Quito"),
                    new question("R", "In the Christmas song, what is the name of the 'red-nosed reindeer'?", "Rudolph"),
                    new question("S", "The name of a famous Disney character, what is the Swahili word for 'lion'?", "Simba"),
                    new question("T", "Who was the Norse god of thunder?", "Thor"),
                    new question("U", "What legendary animal resembles a horse with a single horn growing from its forehead?", "Unicorn"),
                    new question("V", "Shakespeare's 'Romeo and Juliet' is set in what Italian city?", "Verona"),
                    new question("W", "What word for a website that can be edited by anyone comes from the Hawaiian word for 'quick'?", "Wiki"),
                    new question("X", "What word is used for an intense dislike or fear of people from other countries?", "Xenophobia"),
                    new question("Y", "'Y' is the chemical symbol for what element?", "Yttrium"),
                    new question("Z", "Which princess does Link attempt to rescue in a series of video games?", "Zelda")
                ];
                return questions;
            }

            // Question initializer
            function question(letter, description, rightWord) {
                this.letter = letter;
                this.description = description;
                this.rightWord = rightWord;
                this.IsCorrect = null;
            }

            // Keyboard
            $(document).keypress(function (e) {
                if (e.which == 13) {
                    if (gameOn) {
                        checkAnswer();
                    } else {
                        if (startPage) {
                            play();
                        } else {
                            newGame();
                        }
                    }
                }
                if (e.which == 32) {
                    if (gameOn) {
                        pasapalabra();
                    }
                }
            });

            // Buttons
            $("#startGameBtn").click(function () {
                play();
            });
            $("#sendAnswerBtn").click(function () {
                checkAnswer();
            });
            $("#pasapalabraBtn").click(function () {
                pasapalabra();
            });
            $("#playAgainBtn").click(function () {
                newGame();
            });

            // Start Game
            function play() {
                gameOn = true;
                startPage = false;
                $(".startGameBtnDiv").remove();
                $('#game').removeClass("hidden");
                isGameOn();
            }

            // Game logic
            function isGameOn() {

                // Get all questions that haven't been answered yet
                var questionsLeft = questions.filter(function (question) {
                    return question.IsCorrect == null;
                })

                // If there are questions left in array, show next question
                if (questionsLeft.length !== 0) {
                    showQuestion(questionsLeft[0]);
                    letterPosition = getLetterPosition(questionsLeft[0]);
                }

                // Otherwise, game over
                else {
                    gameOver();
                }
            }

            // Returns array position of current question
            function getLetterPosition(question) {
                var pos;
                for (var i = 0; i < questionsLength; i++) {
                    if (questions[i].letter === question.letter) {
                        pos = i;
                        break;
                    }
                }
                return pos;
            }

            // Show current question
            function showQuestion(question) {
                $("#letter").html(question.letter);
                $("#description").html(question.description);
                $("#inputWord").val('');
                $("#inputWord").focus();
            }

            // Check if answer is correct
            function checkAnswer() {

                // Get player's input
                var inputWord = $("#inputWord").val();

                // Clean up input
                inputWord = inputWord.trim();
                inputWord = inputWord.toLowerCase();

                // Get answered question from array of questions
                var answeredQuestion = questions[letterPosition];

                // Get span of answered question's letter
                var letter = "";
                for (var i = asciiOfA; i < questionsLength + asciiOfA; i++) {
                    if (String.fromCharCode(i) == answeredQuestion.letter) {
                        letter = String.fromCharCode(i);
                    }
                }
                var spanOfLetter = $('#' + letter);

                // If player's guessed word is correct, make span green and increase score
                if (inputWord === answeredQuestion.rightWord.toLowerCase()) {
                    answeredQuestion.IsCorrect = true;
                    spanOfLetter.addClass('correctLetter');
                    score++;
                }

                // Otherwise make span red
                else {
                    answeredQuestion.IsCorrect = false;
                    spanOfLetter.addClass('incorrectLetter');
                }

                // Continue game if there are questions left
                isGameOn();
            }

            // Skip to next question
            function pasapalabra() {

                // Push skipped question to the end of the array of questions
                var skippedQuestion = questions.splice(letterPosition, 1)[0];
                questions.push(skippedQuestion);

                // Continue game
                isGameOn();
            }

            // Display score result when game is over
            function gameOver() {
                gameOn = false;
                $('#score').html(score);
                $('#game').addClass('hidden');
                $('#finalGameScore').removeClass('hidden');
            }

            // Reload page if new game
            function newGame() {
                window.location.reload();
            }
        });

    </script>
}